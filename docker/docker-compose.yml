version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "PLAINTEXT_HOST"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      CLUSTER_ID: "Nk018hRAQFytWskYqtQduw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 209715200
    networks:
      - app-network

  spark-master:
    build:
      context: .
      dockerfile: Dockerfile.spark
    container_name: spark-master
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "8081:8081"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
    volumes:
      - ../scripts:/opt/bitnami/spark/scripts
      - ./output:/opt/bitnami/spark/output
      - /home/amine-8kkh/Desktop/amine/VS_project/traffic_analysis-master/videos:/opt/bitnami/spark/videos
    networks:
      - app-network

  spark-worker:
    build:
      context: .
      dockerfile: Dockerfile.spark
    container_name: spark-worker
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - ../scripts:/opt/bitnami/spark/scripts
      - ./output:/opt/bitnami/spark/output
      - /home/amine-8kkh/Desktop/amine/VS_project/traffic_analysis-master/videos:/opt/bitnami/spark/videos
    networks:
      - app-network

  airflow:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow
    user: "airflow:root"
    depends_on:
      - postgres
      - kafka
      - spark-master
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ../scripts:/opt/airflow/scripts
      - ../output:/opt/airflow/output:rw
      - /home/amine-8kkh/Desktop/amine/VS_project/traffic_analysis-master/videos:/opt/airflow/videos
      - ../logs:/airflow/logs:rw
      - ./entrypoint.sh:/entrypoint.sh
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__LOGGING__BASE_LOG_FOLDER=/airflow/logs
      - AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL=30
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
    command: bash /entrypoint.sh
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000" 
      - "9001:9001"  
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data :